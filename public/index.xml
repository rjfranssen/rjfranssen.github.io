<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rjfranssen</title>
    <link>/</link>
    <description>Recent content on rjfranssen</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/overview/</guid>
      <description>Instead of writing all your site pages from scratch, Hugo lets you define and use shortcodes.
Why shortcodes? While markdown is sufficient to produce simple pages, it&#39;s insufficient where complex page structures are needed. Thusly, whenever we need special styling, shortcodes compliment the shortcomings of markdown.
This way, you can side step complex html and css boilerplate in your content files.</description>
    </item>
    
    <item>
      <title>Dashboards</title>
      <link>/dash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dash/</guid>
      <description>my favorite shiny app with cool home ranging models and time lapse tiger trackingstatic flexdashboard page that i use for fast chart and map snippets--shiny app i created to demo view covid data updates using r and jsone of my first apps - trying to get my hands around interactivity</description>
    </item>
    
    <item>
      <title>Links and References</title>
      <link>/links/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/links/list/</guid>
      <description>Sources I like to use when looking for data or for researching/sharing geographic &amp;amp; statistical concepts.
Blogdown &amp;amp; Hugo  Scientific and Technical Blogging: Radix vs. Blogdown Alison Hill: Blog Work with RStudio, GitHub and Netlify to create and deploy your own webpage  Cheatsheets  Cheatsheets for Data Scientists (datacamp) Colors in R (pdf) R Markdown Statistics Cheat Sheet (web.mit.edu) joins using dplyr (r) R to python data wrangling snippets Beautiful Plotting in ggplot2 - ZevRoss (R) BI Visual Reference Visual Vocabulary - Financial Times Mapping Data to Visualizations Visualizing Percentages and Parts of a Whole How to Think Visually (Vital) Which Visualization?</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>/docs/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/shortcodes/</guid>
      <description>Why shortcodes? While markdown is sufficient to produce simple pages, it&#39;s insufficient where complex page structures are needed. Thusly, whenever we need special styling, shortcodes compliment the shortcomings of markdown.
This way, you can side step complex html and css boilerplate in your content files.
Sometimes, the shortcode will wrap content, sometimes it won&#39;t. When content is wrapped, a closing shortcode tag is needed. Please see the link I provided above and the markdown files for examples.</description>
    </item>
    
    <item>
      <title>Shortcodes Applied</title>
      <link>/docs/shortcodes-applied/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/shortcodes-applied/</guid>
      <description>Using blocks, columns &amp;amp; buttons 1 2 3 4 5 6 7 8 9 10 11 12 13  {{&amp;lt; block &amp;#34;grid-2&amp;#34; &amp;gt;}} {{&amp;lt; column &amp;gt;}} #### Coumn 1  Lorem ipsum dolor sit amet, ... {{&amp;lt; button &amp;#34;https://github.com/onweru/compose&amp;#34; &amp;#34;Download Theme&amp;#34; &amp;gt;}} {{&amp;lt; /column &amp;gt;}} {{&amp;lt; column &amp;gt;}} &amp;lt;!-- generates üëá --&amp;gt;   Coumn 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et</description>
    </item>
    
    <item>
      <title>Shortcodes Applied</title>
      <link>/docs/shortcodes-appliedr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/shortcodes-appliedr/</guid>
      <description>Using blocks, columns &amp;amp; buttons{{&amp;lt;/* block &amp;quot;grid-2&amp;quot; */&amp;gt;}}{{&amp;lt;/* column */&amp;gt;}}#### Coumn 1 Lorem ipsum dolor sit amet, ...{{&amp;lt;/* button &amp;quot;https://github.com/onweru/compose&amp;quot; &amp;quot;Download Theme&amp;quot; */&amp;gt;}}{{&amp;lt;/* /column */&amp;gt;}}{{&amp;lt;/* column */&amp;gt;}}&amp;lt;!-- generates üëá --&amp;gt;{{&amp;lt; block ‚Äúgrid-2‚Äù &amp;gt;}}{{&amp;lt; column &amp;gt;}}#### Coumn 1
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et
dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</description>
    </item>
    
    <item>
      <title>Twitter Topics - Gritty Edition</title>
      <link>/docs/twitter-sentiment-philly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/twitter-sentiment-philly/</guid>
      <description># Knitr options: https://yihui.org/knitr/options/library(lubridate)knitr::opts_chunk$set(collapse = TRUE, eval = TRUE, echo = TRUE, message = FALSE, warning = FALSE, include = TRUE)Last updated 2020-12-30.
This is a walkthrough of using the Twitter API with the rtweet R package. It borrows from a few difference sources, including:* ropensci/rtweet documentation
* here</description>
    </item>
    
    <item>
      <title>Custom Color Palette</title>
      <link>/2020/12/30/custom-color-palette/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/30/custom-color-palette/</guid>
      <description>Last updated 2020-12-30.
I&#39;m describing customizing my own color palette for ggplot2. This is based off of Creating corporate colour palettes for ggplot2 by drsimonj.
First, find a bunch of colors that you like. Canva is a good place to go for inspiration; or, us this tool from Adobe Color that will extract colors from a photo you like. Then, there&#39;s always colorbrewer2.
Note: In many cases, you can get away with using the scale_color_manual() and scale_fill_manual() functions directly within ggplot2.</description>
    </item>
    
    <item>
      <title>Twitter Sentiment Philly</title>
      <link>/2020/12/30/twitter-sentiment-philly/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/30/twitter-sentiment-philly/</guid>
      <description>1 2 3 4 5 6 7 8  # Knitr options: https://yihui.org/knitr/options/ library(lubridate) knitr::opts_chunk$set(collapse = TRUE , eval = TRUE , echo = TRUE , message = FALSE , warning = FALSE , include = TRUE)   % addTiles() %% setView(0,0,1) --Last updated 2020-12-30.
This is a walkthrough of using the Twitter API with the rtweet R package. It borrows from a few difference sources, including:
 ropensci/rtweet documentation here Tidy Text Mining with R Twitter Data in R Using Rtweet: Analyze and Download Twitter Data Comparing Twitter archives Mining NASA metadata Analyzing usenet text  Load libraries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #library(twitteR) library(rtweet) library(rmarkdown) library(NLP) library(tm) library(RColorBrewer) library(wordcloud) library(topicmodels) library(SnowballC) library(config) library(dplyr) library(tidytext) library(tidyr) library(ggplot2) library(lubridate) library(readr) library(skimr) library(widgetframe)   Configure Twitter API access There are a couple different ways to authenticate your session.</description>
    </item>
    
  </channel>
</rss>
