labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='blue') +
scale_fill_viridis_d(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='blue') +
scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
#scale_fill_gradient2(low='red', mid='orange', high='blue') +
scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='blue') +
#scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='green') +
#scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='dark green') +
#scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
ggplot(philly_sentiment) +
geom_col(aes(index, sentiment, fill = sentiment)) +
#facet_wrap(~book, ncol = 1, scales = "free_x") # apply if we'relooking across multiple books +
labs(title = "Sentiment of 'Philadelphia' Tweets") +
scale_fill_gradient2(low='red', mid='orange', high='navy') +
#scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
## afinn
afinn <- philly_tweets %>%
inner_join(get_sentiments("afinn")) %>%
#group_by(index = linenumber %/% 80) %>% # Can use 80-line chunks
group_by(index = chapter) %>% # or other type of index value, like date
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
philly_tweets <- tidy_books %>%
filter(book == "Philadelphia")
## afinn
afinn <- philly_tweets %>%
inner_join(get_sentiments("afinn")) %>%
#group_by(index = linenumber %/% 80) %>% # Can use 80-line chunks
group_by(index = chapter) %>% # or other type of index value, like date
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN")
View(afinn)
## rbinding bing and nrc
bing_and_nrc <- bind_rows(
philly_tweets %>%
inner_join(get_sentiments("bing")) %>%
mutate(method = "Bing et al."),
philly_tweets %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive",
"negative"))
) %>%
mutate(method = "NRC")) %>%
count(method, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(bing_and_nrc)
## rbinding bing and nrc
bing_and_nrc <- bind_rows(
philly_tweets %>%
inner_join(get_sentiments("bing")) %>%
mutate(method = "Bing et al."),
philly_tweets %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive",
"negative"))
) %>%
mutate(method = "NRC")) %>%
#count(method, index = linenumber %/% 80, sentiment) %>% # Can use 80-line chunks
count(method, index = chapter, centiment) %>% # or other type of index value, like date
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
philly_tweets %>%
inner_join(get_sentiments("bing")) %>%
mutate(method = "Bing et al."),
## rbinding bing and nrc
bing_and_nrc <- bind_rows(
philly_tweets %>%
inner_join(get_sentiments("bing")) %>%
mutate(method = "Bing et al."),
philly_tweets %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive",
"negative"))
) %>%
mutate(method = "NRC")) %>%
#count(method, index = linenumber %/% 80, sentiment) %>% # Can use 80-line chunks
count(method, index = chapter, sentiment) %>% # or other type of index value, like date
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(bing_and_nrc)
bind_rows(afinn,
bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
labs(title = "Sentiment of 'Philadelphia' Tweets - Lexicon Comparison") +
scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
bind_rows(afinn,
bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
labs(title = "Sentiment of 'Philadelphia' Tweets - Lexicon Comparison") +
scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
bind_rows(afinn,
bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
labs(title = "Sentiment of 'Philadelphia' Tweets - Lexicon Comparison") +
scale_fill_viridis_c(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
bind_rows(afinn,
bing_and_nrc) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
labs(title = "Sentiment of 'Philadelphia' Tweets - Lexicon Comparison") +
scale_fill_viridis_d(option = "viridis") +
theme(legend.position = "none") +
xlab("") +
ylab("Sentiment")
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>% head(25)
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
scale_fill_viridis_d(option = "viridis") +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
custom_stop_words <- bind_rows(tibble(word = c("miss"),
lexicon = c("custom")),
stop_words)
custom_stop_words
custom_stop_words %>% head()
library(wordcloud)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
library(wordcloud)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
custom_stop_words <- bind_rows(tibble(word = c('philadelphia', 'philly', 't.co', 'https'),
lexicon = c("custom")),
stop_words)
custom_stop_words %>% head()
library(wordcloud)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
library(wordcloud)
tidy_books %>%
anti_join(custom_stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
library(wordcloud)
tidy_books %>%
anti_join(custom_stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, col = brewer.pal(8, "Dark2")))
tidy_books %>%
anti_join(custom_stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, col = brewer.pal(8, "viridis")))
tidy_books %>%
anti_join(custom_stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, col = brewer.pal(8, "Dark2")))
custom_stop_words <- bind_rows(tibble(word = c('philadelphia', 'philly', 't.co', 'https', 'amp'),
lexicon = c("custom")),
stop_words)
custom_stop_words %>% head()
library(wordcloud)
tidy_books %>%
anti_join(custom_stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, col = brewer.pal(8, "Dark2")))
library(reshape2)
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("orange", "navy"),
max.words = 100)
acast()
?acast()
tibble(text = prideprejudice) %>% head()
philly_sentences <- tibble(text = tweets_df$text) %>%
unnest_tokens(sentence, text, token = "sentences")
View(philly_sentences)
philly_sentences$sentence[2]
tweets_df$text-2=
s
tweets_df$text[2]
tibble(text = tweets_df$text) %>% head()
philly_sentences <- tibble(text = tweets_df$text) %>%
iconv(text, to = 'latin1') %>%
unnest_tokens(sentence, text, token = "sentences")
tibble(text = tweets_df$text) %>% str()
philly_sentences <- tibble(text = tweets_df$text) %>%
iconv(text, to = 'latin1') %>%
unnest_tokens(sentence, text, token = "sentences")
?iconv
philly_sentences <- tibble(text = tweets_df$text) %>%
iconv(text, from = "UTF-8", to = 'latin1') %>%
unnest_tokens(sentence, text, token = "sentences")
iconv(text, from = "ASCII, to = 'latin1') %>%
philly_sentences <- tibble(text = tweets_df$text) %>%
iconv(text, from = 'ASCII', to = 'latin1') %>%
unnest_tokens(sentence, text, token = 'sentences')
philly_sentences$sentence[2]
philly_sentences$sentence[2]
View(philly_sentences)
)
+
1
''
'
"
x
xx
philly_sentences <- tibble(text = tweets_df$text) %>%
iconv(text, from = 'ASCII', to = 'latin1') %>%
unnest_tokens(sentence, text, token = 'sentences')
philly_sentences <- tibble(text = tweets_df$text) %>%
#iconv(text, from = 'ASCII', to = 'latin1') %>%
unnest_tokens(sentence, text, token = 'sentences')
philly_sentences$sentence[2]
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
View(bingnegative)
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
View(wordcounts)
tidy_books %>%
semi_join(bingnegative) %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = negativewords/words) %>%
filter(chapter != 0) %>%
top_n(1) %>%
ungroup()
tidy_books %>%
semi_join(bingpositive) %>%
group_by(book, chapter) %>%
summarize(positivewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = positivewords/words) %>%
filter(chapter != 0) %>%
top_n(1) %>%
ungroup()
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingpositive) %>%
group_by(book, chapter) %>%
summarize(positivewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = positivewords/words) %>%
filter(chapter != 0) %>%
top_n(1) %>%
ungroup()
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingpositive) %>%
group_by(book, chapter) %>%
summarize(positivewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(positive_ratio = positivewords/words) %>%
filter(chapter != 0) %>%
top_n(1) %>%
ungroup()
top_tweeters <- tweets_df %>%
group_by(screen_name) %>%
summarize(num_tweets = n()) %>%
arrange(-num_tweets) %>% # can also use slice_max()
ungroup() %>%
head(5)
ggplot(top_tweeters) +
geom_histogram(aes(x = screen_name, y = num_tweets, fill = screen_name), stat = 'identity') +
theme_minimal() +
scale_fill_viridis_d(option = "viridis") +
labs(title = "What users are tweeting the most?") +
theme(legend.position = "none") +
xlab("") +
ylab("Number of Tweets")
?scale_fill_viridis_d
library(leaflet)
leaflet(tweets_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~lng
, lat = ~lat)
blogdown:::serve_site()
blogdown:::serve_site()
library(devtools)
source_url("https://raw.githubusercontent.com/rjfranssen/rjfranssen/main/utils/rjfranssen_col_pal.r")
install.packages("xts")
blogdown:::serve_site()
blogdown:::serve_site()
80/12
blogdown::hugo_version()
?update_hugo()
update_hugo(version = "0.77.0")
blogdown::update_hugo(version = "0.77.0")
blogdown::update_hugo(version = 0.77.0)
blogdown::install_hugo()
# install.packages("devtools")
devtools::install_github("r-lib/usethis")
install.packages("rlang")
install.packages("rlang")
# install.packages("devtools")
devtools::install_github("r-lib/usethis")
# install.packages("usethis") # uncomment this to install
usethis::edit_r_profile(scope = "project")
remove.packages("usethis")
library(usethis)
install.packages("usethis")
install.packages("usethis")
# install.packages("usethis") # uncomment this to install
usethis::edit_r_profile(scope = "project")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
run servr::daemon_stop(1)
run servr::daemon_stop()
?framewidget
?frameWidget
library(widgetframe)
?frameWidget
# Knitr options: https://yihui.org/knitr/options/
library(lubridate)
knitr::opts_chunk$set(collapse = TRUE
, eval = TRUE
, echo = TRUE
, message = FALSE
, warning = FALSE
, include = TRUE)
tweet_map <- leaflet(tweets_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~lng
, lat = ~lat)
tweets_df <- readRDS("tweets_df.Rds")
tweets_df %>% head(5) %>% paged_table()
#library(twitteR)
library(rtweet)
library(rmarkdown)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(topicmodels)
library(SnowballC)
library(config)
library(dplyr)
library(tidytext)
library(tidyr)
library(ggplot2)
library(lubridate)
library(readr)
library(skimr)
library(widgetframe)
tweets_df <- readRDS("tweets_df.Rds")
tweets_df %>% head(5) %>% paged_table()
tweets_df %>% head(5) %>% DT::datatable()
library(leaflet)
tweet_map <- leaflet(tweets_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~lng
, lat = ~lat)
saveWidget(tweet_map, 'figures/tweet_map.html')
htmltools::saveWidget(tweet_map, 'figures/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, 'figures/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, '/figures/tweet_map.html')
getwd()
getwd()
htmlwidgets::saveWidget(tweet_map, 'tweet_map.html')
htmlwidgets::saveWidget(tweet_map, 'figures/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, 'widgets/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, '/widgets/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, 'widgets/tweet_map.html')
htmlwidgets::saveWidget(tweet_map, 'tweet_map.html')
htmlwidgets::saveWidget(widget = tweet_map
, 'tweet_map.html'
, selfcontained = TRUE)
htmlwidgets::saveWidget(widget = tweet_map
, 'tweet_map.html'
, selfcontained = TRUE)
htmlwidgets::saveWidget(widget = tweet_map
, 'widgets/tweet_map.html'
, selfcontained = TRUE)
htmlwidgets::saveWidget(widget = tweet_map
, 'tweet_map.html'
, selfcontained = TRUE)
include_url('tweet_map.html', height = "400px")
knitr::include_url('tweet_map.html', height = "400px")
?include_url()
knitr::include_url(url = 'tweet_map.html', height = "400px")
knitr::include_url(url = 'tweet_map.html')
knitr::include_url(url = 'tweet_map.html')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::check_content()
blogdown:::serve_site()
blogdown:::serve_site()
{{< icon name="terminal" pack="fas" >}} Terminal
{{< icon name="python" pack="fab" >}} Python
{{< icon name="r-project" pack="fab" >}} R
